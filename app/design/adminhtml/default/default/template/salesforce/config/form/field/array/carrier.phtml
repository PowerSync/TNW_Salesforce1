<?php
/**
 * @var $this TNW_Salesforce_Block_Adminhtml_System_Config_Form_Field_Array_Carrier
 */
$_htmlId = $this->getHtmlId() ? : '_' . uniqid();

$_colspan = '';
?>
<input type="hidden"
       id="<?php echo $this->getElement()->getHtmlId() ?>"
       name="<?php echo $this->getElement()->getName() ?>[__empty]"
       value="" />
<div class="grid" id="grid<?php echo $_htmlId ?>">
    <table cellpadding="0" cellspacing="0" class="border">
        <tbody>

        <tr class="headings" id="headings<?php echo $_htmlId ?>">
            <?php foreach ($this->_columns as $columnName => $column):?>
                <th><?php echo $column['label'] ?></th>
            <?php endforeach;?>
        </tr>

        </tbody>
    </table>
    <div style="text-align:right;margin-top: 10px;">
        <button type="button"
                onclick="setLocation('<?php echo $this->getUrl('adminhtml/salesforce_config/reloadAccounts') ?>')"
            ><?php echo $this->__('Refresh Accounts') ?></button>
    </div>
</div>
<div id="empty<?php echo $_htmlId ?>">
    <strong><?php echo $this->__('Please make at least one shipment method active.') ?></strong>
</div>

<script type="text/javascript">
    //<![CDATA[
    // create row creator
    var arrayRow<?php echo $_htmlId ?> = {
        // define row prototypeJS template
        template : new Template(
            '<tr id="#{_id}">'
            <?php foreach ($this->_columns as $columnName => $column):?>
            +'<td class="#{_id}-<?php echo $columnName?>">'
            +'<?php echo $this->_renderCellTemplate($columnName)?>'
            +'<\/td>'
            <?php endforeach;?>
            +'<\/tr>'
        ),

        rowsCount : 0,

        add : function(templateData, insertAfterId)
        {
            // generate default template data
            if ('' == templateData) {
                var d = new Date();
                var templateData = {
                <?php foreach ($this->_columns as $columnName => $column):?>
                <?php echo $columnName ?> : '',
                    <?php endforeach;?>
                    _id : '_' + d.getTime() + '_' + d.getMilliseconds()
            };
        }

        // insert before last row
        if ('' == insertAfterId) {
        Element.insert(this.template.evaluate(templateData));
    }
    // insert after specified row
    else {
        Element.insert($(insertAfterId), {after: this.template.evaluate(templateData)});
    }

    // NEW CODE

    // set the selected drop-down list item
    <?php foreach ($this->_columns as $columnName => $column):?>
    var options = $$('td.' + templateData._id + '-' + '<?php echo $columnName?>' + ' option');
    for(var index = 0; index < options.length; ++index) {
        var option = options[index];
        if(option.getAttribute('value') == templateData.<?php echo $columnName?>) {
            option.selected = true
        }
    }
    <?php endforeach;?>

    // END NEW CODE

    this.rowsCount += 1;
    },

    showButtonOnly : function()
    {
        $('grid<?php echo $_htmlId ?>').hide();
        $('empty<?php echo $_htmlId ?>').show();
    }
    }

    // add existing rows
    <?php
    $_addAfterId = "headings{$_htmlId}";
    foreach ($this->getArrayRows() as $_rowId => $_row) {
        echo "arrayRow{$_htmlId}.add(" . $_row->toJson() . ", '{$_addAfterId}');\n";
        $_addAfterId = $_rowId;
    }
    ?>
    $$('#grid<?php echo $_htmlId ?> select').each(function (element) {
        new Chosen(element);
    });

    // initialize standalone button
    $('empty<?php echo $_htmlId ?>').hide();

    // if no rows, hide grid and show button only
    <?php if (!$this->getArrayRows()):?>
    arrayRow<?php echo $_htmlId ?>.showButtonOnly();
    <?php endif;?>

    // toggle the grid, if element is disabled (depending on scope)
    <?php if ($this->getElement()->getDisabled()):?>
    toggleValueElements({checked:true}, $('grid<?php echo $_htmlId ?>').parentNode);
    <?php endif;?>
    //]]>
</script>
